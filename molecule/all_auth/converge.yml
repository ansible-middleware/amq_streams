---
- name: "Automate AMQ Streams install"
  hosts: all
  vars:
    # Enabling Zookeeper Authentication
    amq_streams_zookeeper_auth_enabled: true
    amq_streams_zookeeper_auth_user: zkadmin
    amq_streams_zookeeper_auth_pass: p@ssw0rd

    # Enabling Kafka Broker Listeners
    amq_streams_broker_listeners:
      - AUTHENTICATED://:{{ amq_streams_broker_listener_port }}
      - REPLICATION://:{{ amq_streams_broker_listener_internal_port }}

    # Listener for inter-broker communications
    amq_streams_broker_inter_broker_listener: REPLICATION

    # Enabling Kafka Broker Authentication
    amq_streams_broker_auth_enabled: true
    amq_streams_broker_acl_enabled: true
    amq_streams_broker_auth_scram_enabled: true
    amq_streams_broker_auth_listeners:
      - AUTHENTICATED:SASL_PLAINTEXT
      - REPLICATION:PLAINTEXT

    amq_streams_broker_auth_sasl_mechanisms:
      - PLAIN
      - SCRAM-SHA-512

    # Kafka Plain Users
    amq_streams_broker_auth_plain_users:
      - username: admin
        password: p@ssw0rd
      - username: kafkauser01
        password: p@ssw0rd
      - username: kafkauser02
        password: p@ssw0rd

    # Kafka SCRAM Users
    amq_streams_broker_auth_scram_users:
      - username: kafkascramuser01
        password: p@ssw0rd
      - username: kafkascramuser02
        password: p@ssw0rd

    # Defining default Kafka user for administrative tasks
    amq_streams_broker_admin_mechanism: PLAIN
    #amq_streams_broker_admin_mechanism: SCRAM-SHA-512
    amq_streams_broker_admin_username: admin
    amq_streams_broker_admin_password: p@ssw0rd

    # Topic Management
    amq_streams_broker_topics:
      - name: sampleTopic
        partitions: 1
        replication_factor: 1
      - name: otherTopic
        partitions: 1
        replication_factor: 1
  roles:
    - role: amq_streams_zookeeper
  tasks:
    - name: "Ensure AMQ Streams Broker is running and available."
      ansible.builtin.include_role:
        name: amq_streams_broker
      vars:
        amq_streams_common_skip_download: true

    - name: "Ensure AMQ Streams Connect is running and available."
      ansible.builtin.include_role:
        name: amq_streams_connect
      vars:
        connectors:
          - { name: "file", path: "connectors/file.yml" }

    - name: "Validate that deployment is functional."
      ansible.builtin.include_role:
        name: amq_streams_zookeeper
        tasks_from: validate.yml

    - name: "Validate that Broker deployment is functional."
      ansible.builtin.include_role:
        name: amq_streams_broker
        tasks_from: validate.yml

    - name: "Validate that Connect deployment is functional."
      ansible.builtin.include_role:
        name: amq_streams_connect
        tasks_from: validate.yml

  post_tasks:
    - name: "Ensures topics exist."
      ansible.builtin.include_role:
        name: amq_streams_broker
        tasks_from: topic/create.yml
      loop: "{{ amq_streams_broker_topics }}"
      loop_control:
        loop_var: topic
      vars:
        topic_name: "{{ topic.name }}"
        topic_partitions: "{{ topic.partitions }}"
        topic_replication_factor: "{{ topic.replication_factor }}"

    - name: "Describe created topics."
      ansible.builtin.include_role:
        name: amq_streams_broker
        tasks_from: topic/describe.yml
      loop: "{{ amq_streams_broker_topics }}"
      loop_control:
        loop_var: topic
      vars:
        topic_name: "{{ topic.name }}"

    - name: "ACL: allow principal on {{ topic.name }} for {{ amq_streams_broker_auth_plain_users[0].username }}"
      ansible.builtin.include_role:
        name: amq_streams_broker
        tasks_from: acl/allow_deny_principal.yml
      vars:
        user: "{{ amq_streams_broker_auth_plain_users[0].username }}"
        topic_name: 'otherTopic'

    - name: "ACL: deny principal on {{ topic.name }} for {{ amq_streams_broker_auth_plain_users[0].username }}"
      ansible.builtin.include_role:
        name: amq_streams_broker
        tasks_from: acl/allow_deny_principal.yml
      vars:
        user: "{{ amq_streams_broker_auth_plain_users[0].username }}"
        acl_switch: deny
        topic_name: 'otherTopic'

    - name: "Delete topics"
      ansible.builtin.include_role:
        name: amq_streams_broker
        tasks_from: topic/delete.yml
      loop: "{{ amq_streams_broker_topics }}"
      loop_control:
        loop_var: topic
      vars:
        topic_name: "{{ topic.name }}"

    - name: "Create SCRAM users"
      ansible.builtin.include_role:
        name: amq_streams_broker
        tasks_from: user-scram/create.yml
      loop: "{{ amq_streams_broker_auth_scram_users }}"
      loop_control:
        loop_var: user
      vars:
        user_username: "{{ user.username }}"
        user_password: "{{ user.password }}"

    - name: "Describe SCRAM users"
      ansible.builtin.include_role:
        name: amq_streams_broker
        tasks_from: user-scram/describe.yml
      loop: "{{ amq_streams_broker_auth_scram_users }}"
      loop_control:
        loop_var: user
      vars:
        user_username: "{{ user.username }}"

    - name: "Delete SCRAM users"
      ansible.builtin.include_role:
        name: amq_streams_broker
        tasks_from: user-scram/delete.yml
      loop: "{{ amq_streams_broker_auth_scram_users }}"
      loop_control:
        loop_var: user
      vars:
        user_username: "{{ user.username }}"
