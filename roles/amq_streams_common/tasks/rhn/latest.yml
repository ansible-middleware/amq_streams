---
- name: "Automate AMQ Streams install"
  hosts: all
  vars:
    rhn_product_version: 2.5.1
    rhn_product_path_pattern: '^.*/amq-streams-[0-9.]*-bin.zip$'
    # Topic Management
    amq_streams_broker_topics:
      - name: sampleTopic
        partitions: 2
        replication_factor: 1
      - name: otherTopic
        partitions: 4
        replication_factor: 1
  tasks:
    - name: "Ensure AMQ Streams Broker is running and available."
      ansible.builtin.include_role:
        name: amq_streams_common
        tasks_from: rhn/search.yml
      vars:
        rhn_product_type: 'DISTRIBUTION'
        rhn_product_category: 'jboss.amq.streams'

    - ansible.builtin.debug:
        var: rhn_products.results

    - name: Determine patch versions list
      ansible.builtin.set_fact:
        filtered_versions: "{{ rhn_products.results | map(attribute='file_path') | select('match', rhn_product_path_pattern) | map('regex_replace','[^/]*/amq-streams-([0-9]*[.][0-9]*[.][0-9]*)-.*','\\1' ) | list | unique }}"
      delegate_to: localhost
      run_once: yes

    - name: Determine latest version
      ansible.builtin.set_fact:
         rhn_product_latest_version: "{{ filtered_versions | middleware_automation.common.version_sort | last }}"
      delegate_to: localhost
      run_once: yes

    - ansible.builtin.debug:
        var: rhn_product_latest_version

    - name: "TODO"
      ansible.builtin.set_fact:
        rhn_filtered_products: "{{ rhn_products.results | selectattr('file_path', 'match', '^.*/amq-streams-[0-9.]*-bin.zip$') }}"

    - ansible.builtin.debug:
        var: rhn_filtered_products

    - name: "Download "
      ansible.builtin.include_role:
        name: amq_streams_common
        tasks_from: rhn/download.yml
      vars:
        rhn_product_id: "{{ rhn_filtered_products[0].id }}"
        rhn_product_path: /tmp/
