---
- name: "Ensure required parameter(s) are provided."
  ansible.builtin.assert:
    that:
      - amq_streams_common is defined and amq_streams_common.archive is defined
      - amq_streams_common.archive.download_url is defined
      - amq_streams_common.archive.download_dir is defined
      - amq_streams_common.archive.install_dir is defined
      - amq_streams_common.archive.file is defined
    quiet: true

- name: "Validate credentials (if required)"
  ansible.builtin.assert:
    that:
      - (rhn_username is defined and amq_streams_common_redhat_enable is defined and amq_streams_common_redhat_enable) or not amq_streams_common_redhat_enable is defined or not amq_streams_common_redhat_enable or amq_streams_common_offline_install
      - (rhn_password is defined and amq_streams_common_redhat_enable is defined and amq_streams_common_redhat_enable) or not amq_streams_common_redhat_enable is defined or not amq_streams_common_redhat_enable or amq_streams_common_offline_install
    quiet: True
    fail_msg: "Cannot install Red Hat Enterprise Application AMQ Streams without RHN service accounts credentials. Verify rhn_username and rhn_password are defined or set amq_streams_offline_install"


- name: "Determine current working directory to set as download target - if not specified."
  ansible.builtin.set_fact:
    amq_streams_common_download_dir: "{{ lookup('env', 'pwd') | default('.') }}"
  when:
    - not amq_streams_common.archive.download_dir is defined

- name: "Load metadata on download folder: {{ amq_streams_common_download_dir }}."
  ansible.builtin.stat:
    path: "{{ amq_streams_common_download_dir }}"
    owner: "{{ amq_streams_common_download_user | default(omit) }}"
    group: "{{ amq_streams_common_download_group | default(omit) }}"
  register: download_dir
  delegate_to: localhost

- name: "Verify that download directory exist."
  ansible.builtin.assert:
    that:
      - download_dir is defined
      - download_dir.stat is defined
      - download_dir.stat.exists is defined
      - download_dir.stat.exists
    quiet: true

- name: "Load metadata on download target file: {{ amq_streams_common_download_dir }}/{{ amq_streams_common_archive_file }}"
  ansible.builtin.stat:
    path: "{{ amq_streams_common_download_dir }}/{{ amq_streams_common_archive_file }}"
  register: download_target_file

- name: "Download Kafka: {{ amq_streams_common.archive.download_url }}."
  ansible.builtin.get_url:
    url: "{{ amq_streams_common.archive.download_url }}"
    dest: "{{ amq_streams_common_download_dir }}/{{ amq_streams_common_archive_file }}"
    owner: "{{ amq_streams_common_download_user | default(omit) }}"
    group: "{{ amq_streams_common_download_group | default(omit) }}"
    mode: 0644
  delegate_to: localhost
  when:
    - not download_target_file.stat.exists
