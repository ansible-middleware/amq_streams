---
- name: "Ensure required parameter(s) are provided."
  ansible.builtin.assert:
    that:
      - amq_streams_common is defined and amq_streams_common.archive is defined
      - amq_streams_common.archive.download_url is defined
      - amq_streams_common.archive.download_dir is defined
      - amq_streams_common.archive.install_dir is defined
      - amq_streams_common.archive.file is defined
    quiet: true

- name: Validate existing zipfiles for offline installs
  ansible.builtin.assert:
    that:
      - amq_streams_common_version is defined and amq_streams_common_path_to_archive_file is exists
    quiet: True
    fail_msg: "An offline install was requested, but files are not present on the controller: {{ amq_streams_common_path_to_archive_file }}"
  when:
    - amq_streams_common_offline_install
    - amq_streams_common_redhat_enable is not defined or not amq_streams_common_redhat_enable

- name: "Download artifacts (if required)."
  ansible.builtin.include_tasks: download.yml
  when:
    - not amq_streams_common_offline_install is defined or not amq_streams_common_offline_install

- name: "Load metadata on {{ amq_streams_common.archive.install_dir }}."
  ansible.builtin.stat:
    path: "{{ amq_streams_common_home }}/bin"
  register: download_target

- name: "Extract artifact to {{ amq_streams_common_install_dir }}"
  ansible.builtin.unarchive:
    src: "{{ amq_streams_common_download_dir }}/{{ amq_streams_common_archive_file }}"
    dest: "{{ amq_streams_common.archive.install_dir }}"
    owner: "{{ amq_streams_common_user | default(omit) }}"
    group: "{{ amq_streams_common_group | default(omit) }}"
    remote_src: "{{ amq_streams_common_download_remote_src | default('no') }}"
  when:
    - download_target is defined and download_target.stat is defined and not download_target.stat.exists
