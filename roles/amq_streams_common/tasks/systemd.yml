---
- name: "Ensure that required parameter(s) are provided."
  ansible.builtin.assert:
    that:
      - server_name is defined
      - server_config is defined
    quiet: true

- name: "Ensure {{ server_name }} configuration is deployed ({{ server_config_template }} -> {{ server_config }}."
  ansible.builtin.template:
    src: "{{ server_config_template }}"
    dest: "{{ server_config }}"
    owner: root
    group: root
    mode: 0644
  when:
    - server_config_template is defined
  notify:
    - "Restart {{ server_name }}"
  become: yes

- name: "Ensure log dir belongs to the appropriate user and group - if all provided"
  ansible.builtin.file:
    path: "{{ server_log_dir }}"
    owner: "{{ server_user }}"
    group: "{{ server_group }}"
    state: directory
  when:
    - server_log_dir is defined
    - server_user is defined
    - server_group is defined
  become: yes

- name: "Deploy server configuration - if provided."
  ansible.builtin.template:
    src: "{{ service_systemd_env_file_template | default('templates/service.conf.j2') }}"
    dest: "{{ service_systemd_env_file }}"
    owner: root
    group: root
    mode: 0644
  when:
    - service_systemd_env_file is defined
  become: yes

- name: "Deploy Systemd descriptor for service: {{ server_name }}"
  ansible.builtin.template:
    src: "{{ server_service_config_file_template | default(amq_streams_common.systemd.service_config_file_template) }}"
    dest: "{{ server_systemd_home | default(amq_streams_common.systemd.home) }}/{{ server_systemd_name | default(server_name + '.service') }}"
    group: root
    owner: root
    mode: 0644
  vars:
    service_description: "{{ server_description | default(server_name) }}"
    service_user: "{{ server_user | default('root') }}"
    service_group: "{{ server_group | default('root') }}"
    service_pidfile: "{{ server_pidfile | default(omit) }}"
    service_start_sleep: "{{ server_start_sleep | default(0) }}"
  register: daemon_reload
  become: yes

- name: "Perform daemon-reload to ensure the changes are picked up"
  ansible.builtin.systemd:
    daemon_reload: yes
  become: yes
  when:
    - daemon_reload is defined
    - daemon_reload.changed
  notify:
    - "Restart {{ server_name }}"

- name: "Ensure {{ server_name }} is enabled and running."
  ansible.builtin.service:
    name: "{{ server_name }}"
    enabled: yes
    state: started
  become: yes
