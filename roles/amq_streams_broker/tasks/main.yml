---
- name: "Ensure prerequirements for collection are met."
  ansible.builtin.include_role:
    name: amq_streams_common
    tasks_from: prereqs.yml
  vars:
    prereqs_user: "{{ amq_streams_broker_user }}"
    prereqs_group: "{{ amq_streams_broker_group }}"

- name: "Set Zookeeper host value"
  ansible.builtin.set_fact:
    amq_streams_broker_zookeeper_host: "{{ amq_streams_zookeeper_host | default(amq_streams_broker_zookeeper_host_default_value) }}"
    amq_streams_broker_zookeeper_port: "{{ amq_streams_zookeeper_port | default(amq_streams_broker_zookeeper_port_default_value) }}"

- name: "Ensure Prometheus requirements are met (if enabled: {{ amq_streams_broker_prometheus_enabled }})."
  ansible.builtin.include_role:
    name: amq_streams_common
    tasks_from: prometheus.yml
  vars:
    amq_streams_common_prometheus_port: "{{ amq_streams_broker_prometheus_port }}"
    amq_streams_common_prometheus_bind_addr: "{{ amq_streams_broker_prometheus_bind_addr }}"
    amq_streams_common_prometheus_config_file: "{{ amq_streams_broker_prometheus_config_file }}"
    amq_streams_common_prometheus_config_file_template: "{{ amq_streams_broker_prometheus_config_file_template }}"
  when:
    - amq_streams_broker_prometheus_enabled is defined and amq_streams_broker_prometheus_enabled

- name: "Ensure OS has been properly tuned (RHEL specific)."
  ansible.builtin.include_role:
    name: amq_streams_common
    tasks_from: os_tuning.yml
  vars:
    sysctl_vm_max_map_count: "{{ amq_streams_broker_sysctl_vm_max_map_count }}"
    ulimit_user: "{{ amq_streams_broker_user }}"
    ulimit_limit: "{{ amq_streams_broker_ulimit_max_value }}"
  when:
    - ansible_distribution == "RedHat"

- name: "Escalade privilge to root"
  become: "{{ amq_streams_broker_config_files_requires_privilege_escalation }}"
  block:
    - name: "Ensure broker home dir belongs to appropriate user - if user is defined."
      ansible.builtin.file:
        path: "{{ amq_streams_common_home }}"
        state: directory
        owner: "{{ amq_streams_broker_user | default(omit) }}"
        group: "{{ amq_streams_broker_group | default(omit) }}"
        mode: 0755
      changed_when: false   # TODO: find a better way to deal with that

    - name: "Ensure Broker data dir exists and belongs to the appropriate user - if user is defined."
      ansible.builtin.file:
        path: "{{ amq_streams_broker_data_dir }}"
        state: directory
        owner: "{{ amq_streams_broker_user | default(omit) }}"
        group: "{{ amq_streams_broker_group | default(omit) }}"
        mode: 0755
      when:
        - amq_streams_broker_data_dir is defined

    - name: "Set server_id for {{ amq_streams_broker.service_name }} service."
      ansible.builtin.set_fact:
        server_id: "{{ amq_streams_broker_broker_id | default('0') }}"
      when:
        - not server_id is defined

    - name: "Configure Broker-Zookeeper authentication"
      ansible.builtin.template:
        src: "{{ amq_streams_broker_zookeeper_auth_config_template }}"
        dest: "{{ amq_streams_broker_zookeeper_auth_config }}"
        owner: "{{ amq_streams_broker_user | default(omit) }}"
        group: "{{ amq_streams_broker_group | default(omit) }}"
        mode: 0644
      when:
        - amq_streams_zookeeper_auth_enabled is defined and amq_streams_zookeeper_auth_enabled

    - name: "Enable Broker-Zookeeper authentication environment variable"
      ansible.builtin.set_fact:
        amq_streams_broker_java_opts: "-Djava.security.auth.login.config={{ amq_streams_broker_zookeeper_auth_config }}"
      when:
        - amq_streams_zookeeper_auth_enabled is defined and amq_streams_zookeeper_auth_enabled

    - name: "Wait for Zookeeper to be available - if enabled ({{ amq_streams_broker_zookeeper_host }}:{{ amq_streams_broker_zookeeper_port }})."
      ansible.builtin.wait_for:
        host: "{{ amq_streams_broker_zookeeper_host }}"
        port: "{{ amq_streams_broker_zookeeper_port }}"
      when:
        - amq_streams_broker_zookeeper_wait is defined and amq_streams_broker_zookeeper_wait
        - amq_streams_broker_zookeeper_host is defined
        - amq_streams_broker_zookeeper_port is defined

    - name: "Copy Server Keystore with certificates"
      ansible.builtin.copy:
        src: "{{ amq_streams_broker_tls_keystore_dir }}/{{ amq_streams_broker_tls_keystore }}"
        dest: "{{ amq_streams_broker_tls_keystore_location }}/{{ amq_streams_broker_tls_keystore }}"
        force: true
        owner: "{{ amq_streams_broker_user | default(omit) }}"
        group: "{{ amq_streams_broker_group | default(omit) }}"
      when:
        - amq_streams_broker_tls_enabled is defined and amq_streams_broker_tls_enabled

    - name: "Copy Server Truststore with certificates"
      ansible.builtin.copy:
        src: "{{ amq_streams_broker_tls_truststore_dir }}/{{ amq_streams_broker_tls_truststore }}"
        dest: "{{ amq_streams_broker_tls_truststore_location }}/{{ amq_streams_broker_tls_truststore }}"
        force: true
        owner: "{{ amq_streams_broker_user | default(omit) }}"
        group: "{{ amq_streams_broker_group | default(omit) }}"
      when:
        - amq_streams_broker_tls_enabled is defined and amq_streams_broker_tls_enabled

    - name: "Configure service for Broker (if enable)."
      ansible.builtin.include_tasks: service.yml
