---
- name: "Ensure requirements for Zookeeper are present."
  ansible.builtin.include_tasks: prereqs.yml

- name: "Ensure Zookeeper data dir exists and belongs to the appropriate user - if user is defined."
  ansible.builtin.file:
    path: "{{ amq_streams_zookeeper_data_dir }}"
    state: directory
    owner: "{{ amq_streams_zookeeper_user | default(omit) }}"
    group: "{{ amq_streams_zookeeper_group | default(omit) }}"
    mode: 0755
  when:
    - amq_streams_zookeeper_data_dir is defined

- name: Configure 'myid' file based on the position in the zookeepers group
  copy:
    content: "{{ amq_streams_zookeeper_inventory_group.index(inventory_hostname) + 1 }}"
    dest: "{{ amq_streams_zookeeper_data_dir }}/myid"
    owner: "{{ amq_streams_zookeeper_user | default(omit) }}"
    group: "{{ amq_streams_zookeeper_group | default(omit) }}"
  when:
    - amq_streams_zookeeper_inventory_group is defined
    - amq_streams_zookeeper_inventory_group | length > 0

- name: "Configure Zookeeper authentication"
  ansible.builtin.template:
    src: "{{ amq_streams_zookeeper_auth_config_template }}"
    dest: "{{ amq_streams_zookeeper_auth_config }}"
    owner: "{{ amq_streams_zookeeper_user | default(omit) }}"
    group: "{{ amq_streams_zookeeper_group | default(omit) }}"
    mode: 0644
  when:
    - amq_streams_zookeeper_auth_enabled is defined and amq_streams_zookeeper_auth_enabled

- name: "Enable Zookeeper authentication environment variable"
  ansible.builtin.set_fact:
    amq_streams_zookeeper_java_opts: "-Djava.security.auth.login.config={{ amq_streams_zookeeper_auth_config }}"
  when:
    - amq_streams_zookeeper_auth_enabled is defined and amq_streams_zookeeper_auth_enabled

- name: "Configure firewalld for Zookeeper (if enable)."
  ansible.builtin.include_role:
    name: amq_streams_common
    tasks_from: firewalld.yml
  vars:
    service_port: "{{ amq_streams_broker_bootstrap_server_port }}"
  when:
    - amq_streams_firewalld_enabled is defined and amq_streams_firewalld_enabled
    - amq_streams_broker_bootstrap_server_host is defined

- name: "Ensure Zookeeper is running as a systemd service."
  ansible.builtin.include_role:
    name: amq_streams_common
    tasks_from: systemd.yml
  vars:
    server_name: "{{ amq_streams_zookeeper.service_name }}"
    server_start: "{{ amq_streams_zookeeper.server_start }}"
    server_config: "{{ amq_streams_zookeeper.config.dest }}"
    server_config_template: "{{ amq_streams_zookeeper.config.template }}"
    server_user: "{{ amq_streams_zookeeper_user | default(omit) }}"
    server_group: "{{ amq_streams_zookeeper_group | default(omit) }}"
    server_log_dir: "{{ amq_streams_zookeeper_logs_dir | default(omit) }}"
    service_systemd_env_file_template: "{{ amq_streams_zookeeper_service_config_template }}"
    service_systemd_env_file: "{{ amq_streams_zookeeper_service_env_file }}"
    server_java_heap_opts: "{{ amq_streams_zookeeper_java_heap_opts }}"
    server_java_opts: "{{ amq_streams_zookeeper_java_opts | default('') }}"

- name: "Add zookeeper {{ ansible_nodename | default('[no hostname provided]') }} to instances count."
  ansible.builtin.set_fact:
    amq_streams_zookeeper_instance_count: "{{ amq_streams_zookeeper_instance_count | int + 1 }}"
  delegate_to: "{{ amq_streams_ansible_controller | default('localhost') }}"
